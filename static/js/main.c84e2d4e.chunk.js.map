{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","addLetter","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEMA,E,4MACJC,MAAQ,CACNC,WAAY,2B,EAWdC,UAAY,SAACC,GACX,EAAKC,SAAS,CAAEH,WAAW,4BAAD,OAA8BE,EAAME,IAApC,Q,uDAT5B,WACEC,SAASC,iBAAiB,QAASC,KAAKN,a,kCAG1C,WACEI,SAASG,oBAAoB,QAASD,KAAKN,a,oBAO7C,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BF,KAAKR,MAAMC,mB,GApB9BU,IAAMC,WA0BTb,I,MCvBfc,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.c84e2d4e.chunk.js","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.addLetter);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.addLetter);\n  }\n\n  addLetter = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{this.state.pressedKey}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}